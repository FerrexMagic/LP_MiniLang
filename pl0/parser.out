Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ODD
    THEN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> procdecl
Rule 2     block -> constantdecl vardecl procdecl DO statementlist
Rule 3     empty -> <empty>
Rule 4     expression -> ID
Rule 5     expression -> NUMBER
Rule 6     expression -> PALABRA
Rule 7     expression -> TRUE
Rule 8     expression -> FALSE
Rule 9     expression -> expression PLUS expression
Rule 10    expression -> expression MINUS expression
Rule 11    expression -> expression TIMES expression
Rule 12    expression -> expression DIV expression
Rule 13    constantdecl -> CONST type initlist SCOLON constantdecl
Rule 14    constantdecl -> empty
Rule 15    initlist -> ID ASSIGN expression COLON initlist
Rule 16    initlist -> ID ASSIGN expression
Rule 17    type -> INT
Rule 18    type -> BOOL
Rule 19    type -> STRING
Rule 20    vardecl -> type decllist SCOLON vardecl
Rule 21    vardecl -> empty
Rule 22    decllist -> ID COLON decllist
Rule 23    decllist -> ID
Rule 24    boolexpr -> LPAREN boolexp RPAREN
Rule 25    boolexp -> expression EQ expression
Rule 26    boolexp -> expression GT expression
Rule 27    boolexp -> expression LT expression
Rule 28    boolexp -> expression NEQ expression
Rule 29    boolexp -> expression AND expression
Rule 30    boolexp -> expression OR expression
Rule 31    boolexp -> NOT expression
Rule 32    statement -> DO statementlist END
Rule 33    statement -> ID ASSIGN expression
Rule 34    statement -> IF boolexpr DO statementlist else END
Rule 35    else -> ELSE statement
Rule 36    else -> empty
Rule 37    statement -> WHILE boolexpr statement
Rule 38    statement -> CALL ID
Rule 39    statement -> IN ID
Rule 40    statement -> OUT expression
Rule 41    statement -> PRINT LPAREN expression RPAREN
Rule 42    statement -> ID ASSIGN INPUT LPAREN expression RPAREN
Rule 43    statement -> ID ASSIGN INPUT LPAREN empty RPAREN
Rule 44    statement -> RETURN expression
Rule 45    statement -> RETURN boolexp
Rule 46    statement -> RETURN
Rule 47    statement -> empty
Rule 48    retType -> type
Rule 49    retType -> VOID
Rule 50    expression -> ID LPAREN param RPAREN
Rule 51    expression -> ID LPAREN RPAREN SCOLON
Rule 52    param -> ID COLON param
Rule 53    param -> ID
Rule 54    proc -> SUBROUTINE retType ID LPAREN varlist RPAREN block END
Rule 55    varlist -> type ID COLON varlist
Rule 56    varlist -> type ID
Rule 57    varlist -> empty
Rule 58    procdecl -> proc procdecl
Rule 59    procdecl -> empty
Rule 60    statementlist -> statement SCOLON statementlist
Rule 61    statementlist -> statement

Terminals, with rules where they appear

AND                  : 29
ASSIGN               : 15 16 33 42 43
BOOL                 : 18
CALL                 : 38
COLON                : 15 22 52 55
CONST                : 13
DIV                  : 12
DO                   : 2 32 34
ELSE                 : 35
END                  : 32 34 54
EQ                   : 25
FALSE                : 8
GT                   : 26
ID                   : 4 15 16 22 23 33 38 39 42 43 50 51 52 53 54 55 56
IF                   : 34
IN                   : 39
INPUT                : 42 43
INT                  : 17
LPAREN               : 24 41 42 43 50 51 54
LT                   : 27
MINUS                : 10
NEQ                  : 28
NOT                  : 31
NUMBER               : 5
ODD                  : 
OR                   : 30
OUT                  : 40
PALABRA              : 6
PLUS                 : 9
PRINT                : 41
RETURN               : 44 45 46
RPAREN               : 24 41 42 43 50 51 54
SCOLON               : 13 20 51 60
STRING               : 19
SUBROUTINE           : 54
THEN                 : 
TIMES                : 11
TRUE                 : 7
VOID                 : 49
WHILE                : 37
error                : 

Nonterminals, with rules where they appear

block                : 54
boolexp              : 24 45
boolexpr             : 34 37
constantdecl         : 2 13
decllist             : 20 22
else                 : 34
empty                : 14 21 36 43 47 57 59
expression           : 9 9 10 10 11 11 12 12 15 16 25 25 26 26 27 27 28 28 29 29 30 30 31 33 40 41 42 44
initlist             : 13 15
param                : 50 52
proc                 : 58
procdecl             : 1 2 58
programa             : 0
retType              : 54
statement            : 35 37 60 61
statementlist        : 2 32 34 60
type                 : 13 20 48 55 56
vardecl              : 2 20
varlist              : 54 55

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . procdecl
    (58) procdecl -> . proc procdecl
    (59) procdecl -> . empty
    (54) proc -> . SUBROUTINE retType ID LPAREN varlist RPAREN block END
    (3) empty -> .

    SUBROUTINE      shift and go to state 5
    $end            reduce using rule 3 (empty -> .)

    programa                       shift and go to state 1
    procdecl                       shift and go to state 2
    proc                           shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> programa .



state 2

    (1) programa -> procdecl .

    $end            reduce using rule 1 (programa -> procdecl .)


state 3

    (58) procdecl -> proc . procdecl
    (58) procdecl -> . proc procdecl
    (59) procdecl -> . empty
    (54) proc -> . SUBROUTINE retType ID LPAREN varlist RPAREN block END
    (3) empty -> .

    SUBROUTINE      shift and go to state 5
    $end            reduce using rule 3 (empty -> .)
    DO              reduce using rule 3 (empty -> .)

    proc                           shift and go to state 3
    procdecl                       shift and go to state 6
    empty                          shift and go to state 4

state 4

    (59) procdecl -> empty .

    $end            reduce using rule 59 (procdecl -> empty .)
    DO              reduce using rule 59 (procdecl -> empty .)


state 5

    (54) proc -> SUBROUTINE . retType ID LPAREN varlist RPAREN block END
    (48) retType -> . type
    (49) retType -> . VOID
    (17) type -> . INT
    (18) type -> . BOOL
    (19) type -> . STRING

    VOID            shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 12

    retType                        shift and go to state 7
    type                           shift and go to state 8

state 6

    (58) procdecl -> proc procdecl .

    $end            reduce using rule 58 (procdecl -> proc procdecl .)
    DO              reduce using rule 58 (procdecl -> proc procdecl .)


state 7

    (54) proc -> SUBROUTINE retType . ID LPAREN varlist RPAREN block END

    ID              shift and go to state 13


state 8

    (48) retType -> type .

    ID              reduce using rule 48 (retType -> type .)


state 9

    (49) retType -> VOID .

    ID              reduce using rule 49 (retType -> VOID .)


state 10

    (17) type -> INT .

    ID              reduce using rule 17 (type -> INT .)


state 11

    (18) type -> BOOL .

    ID              reduce using rule 18 (type -> BOOL .)


state 12

    (19) type -> STRING .

    ID              reduce using rule 19 (type -> STRING .)


state 13

    (54) proc -> SUBROUTINE retType ID . LPAREN varlist RPAREN block END

    LPAREN          shift and go to state 14


state 14

    (54) proc -> SUBROUTINE retType ID LPAREN . varlist RPAREN block END
    (55) varlist -> . type ID COLON varlist
    (56) varlist -> . type ID
    (57) varlist -> . empty
    (17) type -> . INT
    (18) type -> . BOOL
    (19) type -> . STRING
    (3) empty -> .

    INT             shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 12
    RPAREN          reduce using rule 3 (empty -> .)

    varlist                        shift and go to state 15
    type                           shift and go to state 16
    empty                          shift and go to state 17

state 15

    (54) proc -> SUBROUTINE retType ID LPAREN varlist . RPAREN block END

    RPAREN          shift and go to state 18


state 16

    (55) varlist -> type . ID COLON varlist
    (56) varlist -> type . ID

    ID              shift and go to state 19


state 17

    (57) varlist -> empty .

    RPAREN          reduce using rule 57 (varlist -> empty .)


state 18

    (54) proc -> SUBROUTINE retType ID LPAREN varlist RPAREN . block END
    (2) block -> . constantdecl vardecl procdecl DO statementlist
    (13) constantdecl -> . CONST type initlist SCOLON constantdecl
    (14) constantdecl -> . empty
    (3) empty -> .

    CONST           shift and go to state 22
    INT             reduce using rule 3 (empty -> .)
    BOOL            reduce using rule 3 (empty -> .)
    STRING          reduce using rule 3 (empty -> .)
    SUBROUTINE      reduce using rule 3 (empty -> .)
    DO              reduce using rule 3 (empty -> .)

    block                          shift and go to state 20
    constantdecl                   shift and go to state 21
    empty                          shift and go to state 23

state 19

    (55) varlist -> type ID . COLON varlist
    (56) varlist -> type ID .

    COLON           shift and go to state 24
    RPAREN          reduce using rule 56 (varlist -> type ID .)


state 20

    (54) proc -> SUBROUTINE retType ID LPAREN varlist RPAREN block . END

    END             shift and go to state 25


state 21

    (2) block -> constantdecl . vardecl procdecl DO statementlist
    (20) vardecl -> . type decllist SCOLON vardecl
    (21) vardecl -> . empty
    (17) type -> . INT
    (18) type -> . BOOL
    (19) type -> . STRING
    (3) empty -> .

    INT             shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 12
    SUBROUTINE      reduce using rule 3 (empty -> .)
    DO              reduce using rule 3 (empty -> .)

    vardecl                        shift and go to state 26
    type                           shift and go to state 27
    empty                          shift and go to state 28

state 22

    (13) constantdecl -> CONST . type initlist SCOLON constantdecl
    (17) type -> . INT
    (18) type -> . BOOL
    (19) type -> . STRING

    INT             shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 12

    type                           shift and go to state 29

state 23

    (14) constantdecl -> empty .

    INT             reduce using rule 14 (constantdecl -> empty .)
    BOOL            reduce using rule 14 (constantdecl -> empty .)
    STRING          reduce using rule 14 (constantdecl -> empty .)
    SUBROUTINE      reduce using rule 14 (constantdecl -> empty .)
    DO              reduce using rule 14 (constantdecl -> empty .)


state 24

    (55) varlist -> type ID COLON . varlist
    (55) varlist -> . type ID COLON varlist
    (56) varlist -> . type ID
    (57) varlist -> . empty
    (17) type -> . INT
    (18) type -> . BOOL
    (19) type -> . STRING
    (3) empty -> .

    INT             shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 12
    RPAREN          reduce using rule 3 (empty -> .)

    type                           shift and go to state 16
    varlist                        shift and go to state 30
    empty                          shift and go to state 17

state 25

    (54) proc -> SUBROUTINE retType ID LPAREN varlist RPAREN block END .

    SUBROUTINE      reduce using rule 54 (proc -> SUBROUTINE retType ID LPAREN varlist RPAREN block END .)
    $end            reduce using rule 54 (proc -> SUBROUTINE retType ID LPAREN varlist RPAREN block END .)
    DO              reduce using rule 54 (proc -> SUBROUTINE retType ID LPAREN varlist RPAREN block END .)


state 26

    (2) block -> constantdecl vardecl . procdecl DO statementlist
    (58) procdecl -> . proc procdecl
    (59) procdecl -> . empty
    (54) proc -> . SUBROUTINE retType ID LPAREN varlist RPAREN block END
    (3) empty -> .

    SUBROUTINE      shift and go to state 5
    DO              reduce using rule 3 (empty -> .)

    procdecl                       shift and go to state 31
    proc                           shift and go to state 3
    empty                          shift and go to state 4

state 27

    (20) vardecl -> type . decllist SCOLON vardecl
    (22) decllist -> . ID COLON decllist
    (23) decllist -> . ID

    ID              shift and go to state 33

    decllist                       shift and go to state 32

state 28

    (21) vardecl -> empty .

    SUBROUTINE      reduce using rule 21 (vardecl -> empty .)
    DO              reduce using rule 21 (vardecl -> empty .)


state 29

    (13) constantdecl -> CONST type . initlist SCOLON constantdecl
    (15) initlist -> . ID ASSIGN expression COLON initlist
    (16) initlist -> . ID ASSIGN expression

    ID              shift and go to state 35

    initlist                       shift and go to state 34

state 30

    (55) varlist -> type ID COLON varlist .

    RPAREN          reduce using rule 55 (varlist -> type ID COLON varlist .)


state 31

    (2) block -> constantdecl vardecl procdecl . DO statementlist

    DO              shift and go to state 36


state 32

    (20) vardecl -> type decllist . SCOLON vardecl

    SCOLON          shift and go to state 37


state 33

    (22) decllist -> ID . COLON decllist
    (23) decllist -> ID .

    COLON           shift and go to state 38
    SCOLON          reduce using rule 23 (decllist -> ID .)


state 34

    (13) constantdecl -> CONST type initlist . SCOLON constantdecl

    SCOLON          shift and go to state 39


state 35

    (15) initlist -> ID . ASSIGN expression COLON initlist
    (16) initlist -> ID . ASSIGN expression

    ASSIGN          shift and go to state 40


state 36

    (2) block -> constantdecl vardecl procdecl DO . statementlist
    (60) statementlist -> . statement SCOLON statementlist
    (61) statementlist -> . statement
    (32) statement -> . DO statementlist END
    (33) statement -> . ID ASSIGN expression
    (34) statement -> . IF boolexpr DO statementlist else END
    (37) statement -> . WHILE boolexpr statement
    (38) statement -> . CALL ID
    (39) statement -> . IN ID
    (40) statement -> . OUT expression
    (41) statement -> . PRINT LPAREN expression RPAREN
    (42) statement -> . ID ASSIGN INPUT LPAREN expression RPAREN
    (43) statement -> . ID ASSIGN INPUT LPAREN empty RPAREN
    (44) statement -> . RETURN expression
    (45) statement -> . RETURN boolexp
    (46) statement -> . RETURN
    (47) statement -> . empty
    (3) empty -> .

    DO              shift and go to state 41
    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    CALL            shift and go to state 47
    IN              shift and go to state 48
    OUT             shift and go to state 49
    PRINT           shift and go to state 50
    RETURN          shift and go to state 52
    SCOLON          reduce using rule 3 (empty -> .)
    END             reduce using rule 3 (empty -> .)

    statementlist                  shift and go to state 42
    statement                      shift and go to state 43
    empty                          shift and go to state 51

state 37

    (20) vardecl -> type decllist SCOLON . vardecl
    (20) vardecl -> . type decllist SCOLON vardecl
    (21) vardecl -> . empty
    (17) type -> . INT
    (18) type -> . BOOL
    (19) type -> . STRING
    (3) empty -> .

    INT             shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 12
    SUBROUTINE      reduce using rule 3 (empty -> .)
    DO              reduce using rule 3 (empty -> .)

    type                           shift and go to state 27
    vardecl                        shift and go to state 53
    empty                          shift and go to state 28

state 38

    (22) decllist -> ID COLON . decllist
    (22) decllist -> . ID COLON decllist
    (23) decllist -> . ID

    ID              shift and go to state 33

    decllist                       shift and go to state 54

state 39

    (13) constantdecl -> CONST type initlist SCOLON . constantdecl
    (13) constantdecl -> . CONST type initlist SCOLON constantdecl
    (14) constantdecl -> . empty
    (3) empty -> .

    CONST           shift and go to state 22
    INT             reduce using rule 3 (empty -> .)
    BOOL            reduce using rule 3 (empty -> .)
    STRING          reduce using rule 3 (empty -> .)
    SUBROUTINE      reduce using rule 3 (empty -> .)
    DO              reduce using rule 3 (empty -> .)

    constantdecl                   shift and go to state 55
    empty                          shift and go to state 23

state 40

    (15) initlist -> ID ASSIGN . expression COLON initlist
    (16) initlist -> ID ASSIGN . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 57

state 41

    (32) statement -> DO . statementlist END
    (60) statementlist -> . statement SCOLON statementlist
    (61) statementlist -> . statement
    (32) statement -> . DO statementlist END
    (33) statement -> . ID ASSIGN expression
    (34) statement -> . IF boolexpr DO statementlist else END
    (37) statement -> . WHILE boolexpr statement
    (38) statement -> . CALL ID
    (39) statement -> . IN ID
    (40) statement -> . OUT expression
    (41) statement -> . PRINT LPAREN expression RPAREN
    (42) statement -> . ID ASSIGN INPUT LPAREN expression RPAREN
    (43) statement -> . ID ASSIGN INPUT LPAREN empty RPAREN
    (44) statement -> . RETURN expression
    (45) statement -> . RETURN boolexp
    (46) statement -> . RETURN
    (47) statement -> . empty
    (3) empty -> .

    DO              shift and go to state 41
    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    CALL            shift and go to state 47
    IN              shift and go to state 48
    OUT             shift and go to state 49
    PRINT           shift and go to state 50
    RETURN          shift and go to state 52
    SCOLON          reduce using rule 3 (empty -> .)
    END             reduce using rule 3 (empty -> .)

    statementlist                  shift and go to state 62
    statement                      shift and go to state 43
    empty                          shift and go to state 51

state 42

    (2) block -> constantdecl vardecl procdecl DO statementlist .

    END             reduce using rule 2 (block -> constantdecl vardecl procdecl DO statementlist .)


state 43

    (60) statementlist -> statement . SCOLON statementlist
    (61) statementlist -> statement .

    SCOLON          shift and go to state 63
    END             reduce using rule 61 (statementlist -> statement .)
    ELSE            reduce using rule 61 (statementlist -> statement .)


state 44

    (33) statement -> ID . ASSIGN expression
    (42) statement -> ID . ASSIGN INPUT LPAREN expression RPAREN
    (43) statement -> ID . ASSIGN INPUT LPAREN empty RPAREN

    ASSIGN          shift and go to state 64


state 45

    (34) statement -> IF . boolexpr DO statementlist else END
    (24) boolexpr -> . LPAREN boolexp RPAREN

    LPAREN          shift and go to state 66

    boolexpr                       shift and go to state 65

state 46

    (37) statement -> WHILE . boolexpr statement
    (24) boolexpr -> . LPAREN boolexp RPAREN

    LPAREN          shift and go to state 66

    boolexpr                       shift and go to state 67

state 47

    (38) statement -> CALL . ID

    ID              shift and go to state 68


state 48

    (39) statement -> IN . ID

    ID              shift and go to state 69


state 49

    (40) statement -> OUT . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 70

state 50

    (41) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 71


state 51

    (47) statement -> empty .

    SCOLON          reduce using rule 47 (statement -> empty .)
    END             reduce using rule 47 (statement -> empty .)
    ELSE            reduce using rule 47 (statement -> empty .)


state 52

    (44) statement -> RETURN . expression
    (45) statement -> RETURN . boolexp
    (46) statement -> RETURN .
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression GT expression
    (27) boolexp -> . expression LT expression
    (28) boolexp -> . expression NEQ expression
    (29) boolexp -> . expression AND expression
    (30) boolexp -> . expression OR expression
    (31) boolexp -> . NOT expression

    SCOLON          reduce using rule 46 (statement -> RETURN .)
    END             reduce using rule 46 (statement -> RETURN .)
    ELSE            reduce using rule 46 (statement -> RETURN .)
    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    NOT             shift and go to state 74

    expression                     shift and go to state 72
    boolexp                        shift and go to state 73

state 53

    (20) vardecl -> type decllist SCOLON vardecl .

    SUBROUTINE      reduce using rule 20 (vardecl -> type decllist SCOLON vardecl .)
    DO              reduce using rule 20 (vardecl -> type decllist SCOLON vardecl .)


state 54

    (22) decllist -> ID COLON decllist .

    SCOLON          reduce using rule 22 (decllist -> ID COLON decllist .)


state 55

    (13) constantdecl -> CONST type initlist SCOLON constantdecl .

    INT             reduce using rule 13 (constantdecl -> CONST type initlist SCOLON constantdecl .)
    BOOL            reduce using rule 13 (constantdecl -> CONST type initlist SCOLON constantdecl .)
    STRING          reduce using rule 13 (constantdecl -> CONST type initlist SCOLON constantdecl .)
    SUBROUTINE      reduce using rule 13 (constantdecl -> CONST type initlist SCOLON constantdecl .)
    DO              reduce using rule 13 (constantdecl -> CONST type initlist SCOLON constantdecl .)


state 56

    (4) expression -> ID .
    (50) expression -> ID . LPAREN param RPAREN
    (51) expression -> ID . LPAREN RPAREN SCOLON

    COLON           reduce using rule 4 (expression -> ID .)
    PLUS            reduce using rule 4 (expression -> ID .)
    MINUS           reduce using rule 4 (expression -> ID .)
    TIMES           reduce using rule 4 (expression -> ID .)
    DIV             reduce using rule 4 (expression -> ID .)
    SCOLON          reduce using rule 4 (expression -> ID .)
    END             reduce using rule 4 (expression -> ID .)
    ELSE            reduce using rule 4 (expression -> ID .)
    EQ              reduce using rule 4 (expression -> ID .)
    GT              reduce using rule 4 (expression -> ID .)
    LT              reduce using rule 4 (expression -> ID .)
    NEQ             reduce using rule 4 (expression -> ID .)
    AND             reduce using rule 4 (expression -> ID .)
    OR              reduce using rule 4 (expression -> ID .)
    RPAREN          reduce using rule 4 (expression -> ID .)
    LPAREN          shift and go to state 75


state 57

    (15) initlist -> ID ASSIGN expression . COLON initlist
    (16) initlist -> ID ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    COLON           shift and go to state 76
    SCOLON          reduce using rule 16 (initlist -> ID ASSIGN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 58

    (5) expression -> NUMBER .

    COLON           reduce using rule 5 (expression -> NUMBER .)
    PLUS            reduce using rule 5 (expression -> NUMBER .)
    MINUS           reduce using rule 5 (expression -> NUMBER .)
    TIMES           reduce using rule 5 (expression -> NUMBER .)
    DIV             reduce using rule 5 (expression -> NUMBER .)
    SCOLON          reduce using rule 5 (expression -> NUMBER .)
    END             reduce using rule 5 (expression -> NUMBER .)
    ELSE            reduce using rule 5 (expression -> NUMBER .)
    EQ              reduce using rule 5 (expression -> NUMBER .)
    GT              reduce using rule 5 (expression -> NUMBER .)
    LT              reduce using rule 5 (expression -> NUMBER .)
    NEQ             reduce using rule 5 (expression -> NUMBER .)
    AND             reduce using rule 5 (expression -> NUMBER .)
    OR              reduce using rule 5 (expression -> NUMBER .)
    RPAREN          reduce using rule 5 (expression -> NUMBER .)


state 59

    (6) expression -> PALABRA .

    COLON           reduce using rule 6 (expression -> PALABRA .)
    PLUS            reduce using rule 6 (expression -> PALABRA .)
    MINUS           reduce using rule 6 (expression -> PALABRA .)
    TIMES           reduce using rule 6 (expression -> PALABRA .)
    DIV             reduce using rule 6 (expression -> PALABRA .)
    SCOLON          reduce using rule 6 (expression -> PALABRA .)
    END             reduce using rule 6 (expression -> PALABRA .)
    ELSE            reduce using rule 6 (expression -> PALABRA .)
    EQ              reduce using rule 6 (expression -> PALABRA .)
    GT              reduce using rule 6 (expression -> PALABRA .)
    LT              reduce using rule 6 (expression -> PALABRA .)
    NEQ             reduce using rule 6 (expression -> PALABRA .)
    AND             reduce using rule 6 (expression -> PALABRA .)
    OR              reduce using rule 6 (expression -> PALABRA .)
    RPAREN          reduce using rule 6 (expression -> PALABRA .)


state 60

    (7) expression -> TRUE .

    COLON           reduce using rule 7 (expression -> TRUE .)
    PLUS            reduce using rule 7 (expression -> TRUE .)
    MINUS           reduce using rule 7 (expression -> TRUE .)
    TIMES           reduce using rule 7 (expression -> TRUE .)
    DIV             reduce using rule 7 (expression -> TRUE .)
    SCOLON          reduce using rule 7 (expression -> TRUE .)
    END             reduce using rule 7 (expression -> TRUE .)
    ELSE            reduce using rule 7 (expression -> TRUE .)
    EQ              reduce using rule 7 (expression -> TRUE .)
    GT              reduce using rule 7 (expression -> TRUE .)
    LT              reduce using rule 7 (expression -> TRUE .)
    NEQ             reduce using rule 7 (expression -> TRUE .)
    AND             reduce using rule 7 (expression -> TRUE .)
    OR              reduce using rule 7 (expression -> TRUE .)
    RPAREN          reduce using rule 7 (expression -> TRUE .)


state 61

    (8) expression -> FALSE .

    COLON           reduce using rule 8 (expression -> FALSE .)
    PLUS            reduce using rule 8 (expression -> FALSE .)
    MINUS           reduce using rule 8 (expression -> FALSE .)
    TIMES           reduce using rule 8 (expression -> FALSE .)
    DIV             reduce using rule 8 (expression -> FALSE .)
    SCOLON          reduce using rule 8 (expression -> FALSE .)
    END             reduce using rule 8 (expression -> FALSE .)
    ELSE            reduce using rule 8 (expression -> FALSE .)
    EQ              reduce using rule 8 (expression -> FALSE .)
    GT              reduce using rule 8 (expression -> FALSE .)
    LT              reduce using rule 8 (expression -> FALSE .)
    NEQ             reduce using rule 8 (expression -> FALSE .)
    AND             reduce using rule 8 (expression -> FALSE .)
    OR              reduce using rule 8 (expression -> FALSE .)
    RPAREN          reduce using rule 8 (expression -> FALSE .)


state 62

    (32) statement -> DO statementlist . END

    END             shift and go to state 81


state 63

    (60) statementlist -> statement SCOLON . statementlist
    (60) statementlist -> . statement SCOLON statementlist
    (61) statementlist -> . statement
    (32) statement -> . DO statementlist END
    (33) statement -> . ID ASSIGN expression
    (34) statement -> . IF boolexpr DO statementlist else END
    (37) statement -> . WHILE boolexpr statement
    (38) statement -> . CALL ID
    (39) statement -> . IN ID
    (40) statement -> . OUT expression
    (41) statement -> . PRINT LPAREN expression RPAREN
    (42) statement -> . ID ASSIGN INPUT LPAREN expression RPAREN
    (43) statement -> . ID ASSIGN INPUT LPAREN empty RPAREN
    (44) statement -> . RETURN expression
    (45) statement -> . RETURN boolexp
    (46) statement -> . RETURN
    (47) statement -> . empty
    (3) empty -> .

    DO              shift and go to state 41
    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    CALL            shift and go to state 47
    IN              shift and go to state 48
    OUT             shift and go to state 49
    PRINT           shift and go to state 50
    RETURN          shift and go to state 52
    SCOLON          reduce using rule 3 (empty -> .)
    END             reduce using rule 3 (empty -> .)
    ELSE            reduce using rule 3 (empty -> .)

    statement                      shift and go to state 43
    statementlist                  shift and go to state 82
    empty                          shift and go to state 51

state 64

    (33) statement -> ID ASSIGN . expression
    (42) statement -> ID ASSIGN . INPUT LPAREN expression RPAREN
    (43) statement -> ID ASSIGN . INPUT LPAREN empty RPAREN
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    INPUT           shift and go to state 84
    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 83

state 65

    (34) statement -> IF boolexpr . DO statementlist else END

    DO              shift and go to state 85


state 66

    (24) boolexpr -> LPAREN . boolexp RPAREN
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression GT expression
    (27) boolexp -> . expression LT expression
    (28) boolexp -> . expression NEQ expression
    (29) boolexp -> . expression AND expression
    (30) boolexp -> . expression OR expression
    (31) boolexp -> . NOT expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    NOT             shift and go to state 74
    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    boolexp                        shift and go to state 86
    expression                     shift and go to state 87

state 67

    (37) statement -> WHILE boolexpr . statement
    (32) statement -> . DO statementlist END
    (33) statement -> . ID ASSIGN expression
    (34) statement -> . IF boolexpr DO statementlist else END
    (37) statement -> . WHILE boolexpr statement
    (38) statement -> . CALL ID
    (39) statement -> . IN ID
    (40) statement -> . OUT expression
    (41) statement -> . PRINT LPAREN expression RPAREN
    (42) statement -> . ID ASSIGN INPUT LPAREN expression RPAREN
    (43) statement -> . ID ASSIGN INPUT LPAREN empty RPAREN
    (44) statement -> . RETURN expression
    (45) statement -> . RETURN boolexp
    (46) statement -> . RETURN
    (47) statement -> . empty
    (3) empty -> .

    DO              shift and go to state 41
    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    CALL            shift and go to state 47
    IN              shift and go to state 48
    OUT             shift and go to state 49
    PRINT           shift and go to state 50
    RETURN          shift and go to state 52
    SCOLON          reduce using rule 3 (empty -> .)
    END             reduce using rule 3 (empty -> .)
    ELSE            reduce using rule 3 (empty -> .)

    statement                      shift and go to state 88
    empty                          shift and go to state 51

state 68

    (38) statement -> CALL ID .

    SCOLON          reduce using rule 38 (statement -> CALL ID .)
    END             reduce using rule 38 (statement -> CALL ID .)
    ELSE            reduce using rule 38 (statement -> CALL ID .)


state 69

    (39) statement -> IN ID .

    SCOLON          reduce using rule 39 (statement -> IN ID .)
    END             reduce using rule 39 (statement -> IN ID .)
    ELSE            reduce using rule 39 (statement -> IN ID .)


state 70

    (40) statement -> OUT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 40 (statement -> OUT expression .)
    END             reduce using rule 40 (statement -> OUT expression .)
    ELSE            reduce using rule 40 (statement -> OUT expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 71

    (41) statement -> PRINT LPAREN . expression RPAREN
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 89

state 72

    (44) statement -> RETURN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . GT expression
    (27) boolexp -> expression . LT expression
    (28) boolexp -> expression . NEQ expression
    (29) boolexp -> expression . AND expression
    (30) boolexp -> expression . OR expression

    SCOLON          reduce using rule 44 (statement -> RETURN expression .)
    END             reduce using rule 44 (statement -> RETURN expression .)
    ELSE            reduce using rule 44 (statement -> RETURN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80
    EQ              shift and go to state 90
    GT              shift and go to state 91
    LT              shift and go to state 92
    NEQ             shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95


state 73

    (45) statement -> RETURN boolexp .

    SCOLON          reduce using rule 45 (statement -> RETURN boolexp .)
    END             reduce using rule 45 (statement -> RETURN boolexp .)
    ELSE            reduce using rule 45 (statement -> RETURN boolexp .)


state 74

    (31) boolexp -> NOT . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 96

state 75

    (50) expression -> ID LPAREN . param RPAREN
    (51) expression -> ID LPAREN . RPAREN SCOLON
    (52) param -> . ID COLON param
    (53) param -> . ID

    RPAREN          shift and go to state 99
    ID              shift and go to state 97

    param                          shift and go to state 98

state 76

    (15) initlist -> ID ASSIGN expression COLON . initlist
    (15) initlist -> . ID ASSIGN expression COLON initlist
    (16) initlist -> . ID ASSIGN expression

    ID              shift and go to state 35

    initlist                       shift and go to state 100

state 77

    (9) expression -> expression PLUS . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 101

state 78

    (10) expression -> expression MINUS . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 102

state 79

    (11) expression -> expression TIMES . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 103

state 80

    (12) expression -> expression DIV . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 104

state 81

    (32) statement -> DO statementlist END .

    SCOLON          reduce using rule 32 (statement -> DO statementlist END .)
    END             reduce using rule 32 (statement -> DO statementlist END .)
    ELSE            reduce using rule 32 (statement -> DO statementlist END .)


state 82

    (60) statementlist -> statement SCOLON statementlist .

    END             reduce using rule 60 (statementlist -> statement SCOLON statementlist .)
    ELSE            reduce using rule 60 (statementlist -> statement SCOLON statementlist .)


state 83

    (33) statement -> ID ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 33 (statement -> ID ASSIGN expression .)
    END             reduce using rule 33 (statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 33 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 84

    (42) statement -> ID ASSIGN INPUT . LPAREN expression RPAREN
    (43) statement -> ID ASSIGN INPUT . LPAREN empty RPAREN

    LPAREN          shift and go to state 105


state 85

    (34) statement -> IF boolexpr DO . statementlist else END
    (60) statementlist -> . statement SCOLON statementlist
    (61) statementlist -> . statement
    (32) statement -> . DO statementlist END
    (33) statement -> . ID ASSIGN expression
    (34) statement -> . IF boolexpr DO statementlist else END
    (37) statement -> . WHILE boolexpr statement
    (38) statement -> . CALL ID
    (39) statement -> . IN ID
    (40) statement -> . OUT expression
    (41) statement -> . PRINT LPAREN expression RPAREN
    (42) statement -> . ID ASSIGN INPUT LPAREN expression RPAREN
    (43) statement -> . ID ASSIGN INPUT LPAREN empty RPAREN
    (44) statement -> . RETURN expression
    (45) statement -> . RETURN boolexp
    (46) statement -> . RETURN
    (47) statement -> . empty
    (3) empty -> .

    DO              shift and go to state 41
    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    CALL            shift and go to state 47
    IN              shift and go to state 48
    OUT             shift and go to state 49
    PRINT           shift and go to state 50
    RETURN          shift and go to state 52
    SCOLON          reduce using rule 3 (empty -> .)
    ELSE            reduce using rule 3 (empty -> .)
    END             reduce using rule 3 (empty -> .)

    statementlist                  shift and go to state 106
    statement                      shift and go to state 43
    empty                          shift and go to state 51

state 86

    (24) boolexpr -> LPAREN boolexp . RPAREN

    RPAREN          shift and go to state 107


state 87

    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . GT expression
    (27) boolexp -> expression . LT expression
    (28) boolexp -> expression . NEQ expression
    (29) boolexp -> expression . AND expression
    (30) boolexp -> expression . OR expression
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    EQ              shift and go to state 90
    GT              shift and go to state 91
    LT              shift and go to state 92
    NEQ             shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 88

    (37) statement -> WHILE boolexpr statement .

    SCOLON          reduce using rule 37 (statement -> WHILE boolexpr statement .)
    END             reduce using rule 37 (statement -> WHILE boolexpr statement .)
    ELSE            reduce using rule 37 (statement -> WHILE boolexpr statement .)


state 89

    (41) statement -> PRINT LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 90

    (25) boolexp -> expression EQ . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 109

state 91

    (26) boolexp -> expression GT . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 110

state 92

    (27) boolexp -> expression LT . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 111

state 93

    (28) boolexp -> expression NEQ . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 112

state 94

    (29) boolexp -> expression AND . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 113

state 95

    (30) boolexp -> expression OR . expression
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    expression                     shift and go to state 114

state 96

    (31) boolexp -> NOT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 31 (boolexp -> NOT expression .)
    END             reduce using rule 31 (boolexp -> NOT expression .)
    ELSE            reduce using rule 31 (boolexp -> NOT expression .)
    RPAREN          reduce using rule 31 (boolexp -> NOT expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 97

    (52) param -> ID . COLON param
    (53) param -> ID .

    COLON           shift and go to state 115
    RPAREN          reduce using rule 53 (param -> ID .)


state 98

    (50) expression -> ID LPAREN param . RPAREN

    RPAREN          shift and go to state 116


state 99

    (51) expression -> ID LPAREN RPAREN . SCOLON

    SCOLON          shift and go to state 117


state 100

    (15) initlist -> ID ASSIGN expression COLON initlist .

    SCOLON          reduce using rule 15 (initlist -> ID ASSIGN expression COLON initlist .)


state 101

    (9) expression -> expression PLUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    COLON           reduce using rule 9 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 9 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 9 (expression -> expression PLUS expression .)
    SCOLON          reduce using rule 9 (expression -> expression PLUS expression .)
    END             reduce using rule 9 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 9 (expression -> expression PLUS expression .)
    EQ              reduce using rule 9 (expression -> expression PLUS expression .)
    GT              reduce using rule 9 (expression -> expression PLUS expression .)
    LT              reduce using rule 9 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 9 (expression -> expression PLUS expression .)
    AND             reduce using rule 9 (expression -> expression PLUS expression .)
    OR              reduce using rule 9 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 79
    DIV             shift and go to state 80

  ! TIMES           [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]


state 102

    (10) expression -> expression MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    COLON           reduce using rule 10 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 10 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 10 (expression -> expression MINUS expression .)
    SCOLON          reduce using rule 10 (expression -> expression MINUS expression .)
    END             reduce using rule 10 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 10 (expression -> expression MINUS expression .)
    EQ              reduce using rule 10 (expression -> expression MINUS expression .)
    GT              reduce using rule 10 (expression -> expression MINUS expression .)
    LT              reduce using rule 10 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 10 (expression -> expression MINUS expression .)
    AND             reduce using rule 10 (expression -> expression MINUS expression .)
    OR              reduce using rule 10 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 79
    DIV             shift and go to state 80

  ! TIMES           [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]


state 103

    (11) expression -> expression TIMES expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    COLON           reduce using rule 11 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 11 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 11 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 11 (expression -> expression TIMES expression .)
    DIV             reduce using rule 11 (expression -> expression TIMES expression .)
    SCOLON          reduce using rule 11 (expression -> expression TIMES expression .)
    END             reduce using rule 11 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 11 (expression -> expression TIMES expression .)
    EQ              reduce using rule 11 (expression -> expression TIMES expression .)
    GT              reduce using rule 11 (expression -> expression TIMES expression .)
    LT              reduce using rule 11 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 11 (expression -> expression TIMES expression .)
    AND             reduce using rule 11 (expression -> expression TIMES expression .)
    OR              reduce using rule 11 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 11 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! TIMES           [ shift and go to state 79 ]
  ! DIV             [ shift and go to state 80 ]


state 104

    (12) expression -> expression DIV expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    COLON           reduce using rule 12 (expression -> expression DIV expression .)
    PLUS            reduce using rule 12 (expression -> expression DIV expression .)
    MINUS           reduce using rule 12 (expression -> expression DIV expression .)
    TIMES           reduce using rule 12 (expression -> expression DIV expression .)
    DIV             reduce using rule 12 (expression -> expression DIV expression .)
    SCOLON          reduce using rule 12 (expression -> expression DIV expression .)
    END             reduce using rule 12 (expression -> expression DIV expression .)
    ELSE            reduce using rule 12 (expression -> expression DIV expression .)
    EQ              reduce using rule 12 (expression -> expression DIV expression .)
    GT              reduce using rule 12 (expression -> expression DIV expression .)
    LT              reduce using rule 12 (expression -> expression DIV expression .)
    NEQ             reduce using rule 12 (expression -> expression DIV expression .)
    AND             reduce using rule 12 (expression -> expression DIV expression .)
    OR              reduce using rule 12 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 12 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! TIMES           [ shift and go to state 79 ]
  ! DIV             [ shift and go to state 80 ]


state 105

    (42) statement -> ID ASSIGN INPUT LPAREN . expression RPAREN
    (43) statement -> ID ASSIGN INPUT LPAREN . empty RPAREN
    (4) expression -> . ID
    (5) expression -> . NUMBER
    (6) expression -> . PALABRA
    (7) expression -> . TRUE
    (8) expression -> . FALSE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIV expression
    (50) expression -> . ID LPAREN param RPAREN
    (51) expression -> . ID LPAREN RPAREN SCOLON
    (3) empty -> .

    ID              shift and go to state 56
    NUMBER          shift and go to state 58
    PALABRA         shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    RPAREN          reduce using rule 3 (empty -> .)

    expression                     shift and go to state 118
    empty                          shift and go to state 119

state 106

    (34) statement -> IF boolexpr DO statementlist . else END
    (35) else -> . ELSE statement
    (36) else -> . empty
    (3) empty -> .

    ELSE            shift and go to state 121
    END             reduce using rule 3 (empty -> .)

    else                           shift and go to state 120
    empty                          shift and go to state 122

state 107

    (24) boolexpr -> LPAREN boolexp RPAREN .

    DO              reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    ID              reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    IF              reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    WHILE           reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    CALL            reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    IN              reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    OUT             reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    PRINT           reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    RETURN          reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    SCOLON          reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    END             reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)
    ELSE            reduce using rule 24 (boolexpr -> LPAREN boolexp RPAREN .)


state 108

    (41) statement -> PRINT LPAREN expression RPAREN .

    SCOLON          reduce using rule 41 (statement -> PRINT LPAREN expression RPAREN .)
    END             reduce using rule 41 (statement -> PRINT LPAREN expression RPAREN .)
    ELSE            reduce using rule 41 (statement -> PRINT LPAREN expression RPAREN .)


state 109

    (25) boolexp -> expression EQ expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 25 (boolexp -> expression EQ expression .)
    END             reduce using rule 25 (boolexp -> expression EQ expression .)
    ELSE            reduce using rule 25 (boolexp -> expression EQ expression .)
    RPAREN          reduce using rule 25 (boolexp -> expression EQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 110

    (26) boolexp -> expression GT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 26 (boolexp -> expression GT expression .)
    END             reduce using rule 26 (boolexp -> expression GT expression .)
    ELSE            reduce using rule 26 (boolexp -> expression GT expression .)
    RPAREN          reduce using rule 26 (boolexp -> expression GT expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 111

    (27) boolexp -> expression LT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 27 (boolexp -> expression LT expression .)
    END             reduce using rule 27 (boolexp -> expression LT expression .)
    ELSE            reduce using rule 27 (boolexp -> expression LT expression .)
    RPAREN          reduce using rule 27 (boolexp -> expression LT expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 112

    (28) boolexp -> expression NEQ expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 28 (boolexp -> expression NEQ expression .)
    END             reduce using rule 28 (boolexp -> expression NEQ expression .)
    ELSE            reduce using rule 28 (boolexp -> expression NEQ expression .)
    RPAREN          reduce using rule 28 (boolexp -> expression NEQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 113

    (29) boolexp -> expression AND expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 29 (boolexp -> expression AND expression .)
    END             reduce using rule 29 (boolexp -> expression AND expression .)
    ELSE            reduce using rule 29 (boolexp -> expression AND expression .)
    RPAREN          reduce using rule 29 (boolexp -> expression AND expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 114

    (30) boolexp -> expression OR expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    SCOLON          reduce using rule 30 (boolexp -> expression OR expression .)
    END             reduce using rule 30 (boolexp -> expression OR expression .)
    ELSE            reduce using rule 30 (boolexp -> expression OR expression .)
    RPAREN          reduce using rule 30 (boolexp -> expression OR expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 115

    (52) param -> ID COLON . param
    (52) param -> . ID COLON param
    (53) param -> . ID

    ID              shift and go to state 97

    param                          shift and go to state 123

state 116

    (50) expression -> ID LPAREN param RPAREN .

    COLON           reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    PLUS            reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    MINUS           reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    TIMES           reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    DIV             reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    SCOLON          reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    END             reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    ELSE            reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    EQ              reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    GT              reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    LT              reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    NEQ             reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    AND             reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    OR              reduce using rule 50 (expression -> ID LPAREN param RPAREN .)
    RPAREN          reduce using rule 50 (expression -> ID LPAREN param RPAREN .)


state 117

    (51) expression -> ID LPAREN RPAREN SCOLON .

    COLON           reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    PLUS            reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    MINUS           reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    TIMES           reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    DIV             reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    SCOLON          reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    END             reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    ELSE            reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    EQ              reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    GT              reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    LT              reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    NEQ             reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    AND             reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    OR              reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)
    RPAREN          reduce using rule 51 (expression -> ID LPAREN RPAREN SCOLON .)


state 118

    (42) statement -> ID ASSIGN INPUT LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIV expression

    RPAREN          shift and go to state 124
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    TIMES           shift and go to state 79
    DIV             shift and go to state 80


state 119

    (43) statement -> ID ASSIGN INPUT LPAREN empty . RPAREN

    RPAREN          shift and go to state 125


state 120

    (34) statement -> IF boolexpr DO statementlist else . END

    END             shift and go to state 126


state 121

    (35) else -> ELSE . statement
    (32) statement -> . DO statementlist END
    (33) statement -> . ID ASSIGN expression
    (34) statement -> . IF boolexpr DO statementlist else END
    (37) statement -> . WHILE boolexpr statement
    (38) statement -> . CALL ID
    (39) statement -> . IN ID
    (40) statement -> . OUT expression
    (41) statement -> . PRINT LPAREN expression RPAREN
    (42) statement -> . ID ASSIGN INPUT LPAREN expression RPAREN
    (43) statement -> . ID ASSIGN INPUT LPAREN empty RPAREN
    (44) statement -> . RETURN expression
    (45) statement -> . RETURN boolexp
    (46) statement -> . RETURN
    (47) statement -> . empty
    (3) empty -> .

    DO              shift and go to state 41
    ID              shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    CALL            shift and go to state 47
    IN              shift and go to state 48
    OUT             shift and go to state 49
    PRINT           shift and go to state 50
    RETURN          shift and go to state 52
    END             reduce using rule 3 (empty -> .)

    statement                      shift and go to state 127
    empty                          shift and go to state 51

state 122

    (36) else -> empty .

    END             reduce using rule 36 (else -> empty .)


state 123

    (52) param -> ID COLON param .

    RPAREN          reduce using rule 52 (param -> ID COLON param .)


state 124

    (42) statement -> ID ASSIGN INPUT LPAREN expression RPAREN .

    SCOLON          reduce using rule 42 (statement -> ID ASSIGN INPUT LPAREN expression RPAREN .)
    END             reduce using rule 42 (statement -> ID ASSIGN INPUT LPAREN expression RPAREN .)
    ELSE            reduce using rule 42 (statement -> ID ASSIGN INPUT LPAREN expression RPAREN .)


state 125

    (43) statement -> ID ASSIGN INPUT LPAREN empty RPAREN .

    SCOLON          reduce using rule 43 (statement -> ID ASSIGN INPUT LPAREN empty RPAREN .)
    END             reduce using rule 43 (statement -> ID ASSIGN INPUT LPAREN empty RPAREN .)
    ELSE            reduce using rule 43 (statement -> ID ASSIGN INPUT LPAREN empty RPAREN .)


state 126

    (34) statement -> IF boolexpr DO statementlist else END .

    SCOLON          reduce using rule 34 (statement -> IF boolexpr DO statementlist else END .)
    END             reduce using rule 34 (statement -> IF boolexpr DO statementlist else END .)
    ELSE            reduce using rule 34 (statement -> IF boolexpr DO statementlist else END .)


state 127

    (35) else -> ELSE statement .

    END             reduce using rule 35 (else -> ELSE statement .)

